//bubble sort
#include<stdio.h>
#include<omp.h>
#include<iostream>
using namespace std;
void swap(int &a,int &b)
{
    int temp=a;
    a=b;
    b=temp;
}
void bubble(int *a,int n)
{
    for(int i=0;i<n;i++)
    {
        int phase =i%2;
        #pragma omp parallel for shared(a,phase)
        for(int j=phase;j<n-1;j+=2)
        {
            if(a[j]>a[j+1])
            {
                swap(a[j],a[j+1]);
            }
        }
    }
}
int main()
{
    int *a,n;
    double start,stop;
    cout<<"ENTER THE ARRAY SIZE"<<endl;
    cin>>n;
    a=new int[n];
    cout<<"ENTER THE ELEMENTS"<<endl;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cout<<endl;
    start=omp_get_wtime();
    bubble(a,n);
    stop=omp_get_wtime();
    cout<<"SORTED ARRAY IS";
    for(int i=0;i<n;i++)
    {
        cout<<a[i];
    }
    cout<<endl;
    cout<<"Time taken"<<(stop-start)<<endl;
    delete []a;
    return 0;
}
